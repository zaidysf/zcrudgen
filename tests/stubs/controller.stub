<?php

namespace {{ namespace }};

use {{ model_namespace }};
use {{ service_namespace }};
use {{ resource_namespace }};
use {{ request_namespace }}\Create{{ class }}Request;
use {{ request_namespace }}\Update{{ class }}Request;
use App\Http\Controllers\Controller;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;

class {{ class }}Controller extends Controller
{
    protected $service;

    public function __construct({{ class }}Service $service)
    {
        $this->service = $service;
        {{ middleware }}
    }{{ permissions }}

    /**
     * @OA\Get(
     *     path="/api/{{ route_prefix }}",
     *     summary="List all {{ route_prefix }}",
     *     tags=["{{ class }}"],
     *     @OA\Response(response=200, description="Success")
     * )
     */
    public function index(): AnonymousResourceCollection
    {
        $filters = request()->except(['page', 'per_page']);
        $data = $this->service->getAll($filters);
        return {{ class }}Resource::collection($data);
    }

    /**
     * @OA\Get(
     *     path="/api/{{ route_prefix }}/{id}",
     *     summary="Get specific {{ class }}",
     *     tags=["{{ class }}"],
     *     @OA\Response(response=200, description="Success")
     * )
     */
    public function show(int $id): {{ class }}Resource
    {
        $data = $this->service->find($id);
        return new {{ class }}Resource($data);
    }

    /**
     * @OA\Post(
     *     path="/api/{{ route_prefix }}",
     *     summary="Create new {{ class }}",
     *     tags=["{{ class }}"],
     *     @OA\Response(response=201, description="Created successfully")
     * )
     */
    public function store(Create{{ class }}Request $request): {{ class }}Resource
    {
        $data = $this->service->create($request->validated());
        return new {{ class }}Resource($data);
    }

    /**
     * @OA\Put(
     *     path="/api/{{ route_prefix }}/{id}",
     *     summary="Update {{ class }}",
     *     tags=["{{ class }}"],
     *     @OA\Response(response=200, description="Updated successfully")
     * )
     */
    public function update(Update{{ class }}Request $request, int $id): {{ class }}Resource
    {
        $data = $this->service->update($id, $request->validated());
        return new {{ class }}Resource($data);
    }

    /**
     * @OA\Delete(
     *     path="/api/{{ route_prefix }}/{id}",
     *     summary="Delete {{ class }}",
     *     tags=["{{ class }}"],
     *     @OA\Response(response=200, description="Deleted successfully")
     * )
     */
    public function destroy(int $id): JsonResponse
    {
        $this->service->delete($id);
        return response()->json(['message' => '{{ class }} deleted successfully']);
    }
}
